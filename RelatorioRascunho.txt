RELATÓRIO CHECK LIST:

---------------------------------------------------------------------------------------------

1 - Modificar a gramática:
	 - pk?
	 - para k?

- Tornar a gramática numa gramática regular (recursiva à esquerda)

- A gramática é ambígua, por isso tem de resolver as ambiguidades de modo a resolver os conflitos de shift reduce que eram causados, através de precedências (if e if/else), criar novas regras na gramática(separar o AND do OR, O = !=, >= <=), separar operadores (porque tinham diferentes prioridades (agrupar à esquerda/direita))

Mudar a gramática para resolver as a

---------------------------------------------------------------------------------------------

2 - Geração de código:
	 - coisas que fizemos todas fofas (inicializar o valor de retorno,...) 







---------------------------------------------------------------------------------------------

3 - limpar memória




---------------------------------------------------------------------------------------------

4 - Usar uma estrutura, pq?



---------------------------------------------------------------------------------------------

5 - Análise da linguagem (opcional)
	 - coisas que a linguagem não preve e que dá erro em java
	 - cenas do mal
	 - como resolver cenas da linguagem



---------------------------------------------------------------------------------------------

6 - Garbage collection




---------------------------------------------------------------------------------------------








falta:

análise lexical:
expressão regular para os IDS e para os intlit

pk foi necessário separar as prioridades

como foi realizado o tratamento de erros
(contar linhas e colunas)
como foi feita a parte de ignorar os comentários (visto que podem estar no meio do cod)


análise sintática:
como é que o yaac vai buscar as cenas ao lex
recursividade
	temos à direita, mas era preferivel ser à esquerda
como resolvemos os conflitos shift reduce (do if/else e assim)
como resolvemos a questão da indexação de arrays (não poderem existir arrays bidimensionais)


arvore sintaxe
	pk utilizar apenas só uma estrutura(temos duas, mas é como se fosse só uma...)?
	como tratamos os nos obrigatórios (têm de imprimir null)
	como tratamos a questão do methodo (que tem aquelas cenas do methidparams e do methodbody)



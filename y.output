Terminals which are not used

   RESERVED


Grammar

    0 $accept: Start $end

    1 Start: CLASS ID OBRACE field_or_method_decaration CBRACE

    2 field_or_method_decaration: FieldDecl field_or_method_decaration
    3                           | MethodDecl field_or_method_decaration
    4                           | /* empty */

    5 FieldDecl: STATIC VarDecl

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE

    7 method_type_declaration: Type
    8                        | VOID

    9 FormalParams: Type ID several_FormalParams
   10             | STRING OSQUARE CSQUARE ID
   11             | /* empty */

   12 several_FormalParams: COMMA Type ID several_FormalParams
   13                     | /* empty */

   14 VarDecl: Type ID several_var_decl_in_same_instructionOPTIONAL SEMIC VarDecl
   15        | /* empty */

   16 several_var_decl_in_same_instructionOPTIONAL: COMMA ID several_var_decl_in_same_instructionOPTIONAL
   17                                             | /* empty */

   18 Type: int_or_bool square_brackets_OPTIONAL

   19 square_brackets_OPTIONAL: OSQUARE CSQUARE
   20                         | /* empty */

   21 statement_declaration_REPETITION: Statement statement_declaration_REPETITION
   22                                 | /* empty */

   23 Statement: OBRACE several_statement CBRACE
   24          | IF OCURV Expr CCURV Statement
   25          | IF OCURV Expr CCURV Statement ELSE Statement
   26          | WHILE OCURV Expr CCURV Statement
   27          | PRINT OCURV Expr CCURV SEMIC
   28          | ID array_indexOPTIONAL ASSIGN Expr SEMIC
   29          | RETURN return_expression SEMIC

   30 several_statement: Statement several_statement
   31                  | /* empty */

   32 array_indexOPTIONAL: OSQUARE Expr CSQUARE
   33                    | /* empty */

   34 return_expression: Expr
   35                  | /* empty */

   36 Cenas: Expr operations Expr
   37      | ID
   38      | INTLIT
   39      | BOOLLIT
   40      | not_or_op3 Expr
   41      | OCURV Expr CCURV
   42      | Expr DOTLENGTH
   43      | PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV
   44      | ID OCURV Args_OPTIONAL CCURV

   45 Expr: Cenas
   46     | Cenas OSQUARE Expr CSQUARE
   47     | NEW int_or_bool OSQUARE Expr CSQUARE

   48 operations: OP1
   49           | OP2
   50           | OP3
   51           | OP4

   52 int_or_bool: INT
   53            | BOOL

   54 not_or_op3: OP3
   55           | NOT

   56 Args_OPTIONAL: Args
   57              | /* empty */

   58 Args: Expr comma_expr

   59 comma_expr: COMMA Expr comma_expr
   60           | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
INTLIT (258) 38
BOOLLIT (259) 39
INT (260) 52
BOOL (261) 53
NEW (262) 47
IF (263) 24 25
ELSE (264) 25
WHILE (265) 26
PRINT (266) 27
PARSEINT (267) 43
CLASS (268) 1
PUBLIC (269) 6
STATIC (270) 5 6
VOID (271) 8
STRING (272) 10
DOTLENGTH (273) 42
RETURN (274) 29
OCURV (275) 6 24 25 26 27 41 43 44
CCURV (276) 6 24 25 26 27 41 43 44
OBRACE (277) 1 6 23
CBRACE (278) 1 6 23
OSQUARE (279) 10 19 32 43 46 47
CSQUARE (280) 10 19 32 43 46 47
OP1 (281) 48
OP2 (282) 49
OP3 (283) 50 54
OP4 (284) 51
NOT (285) 55
ASSIGN (286) 28
SEMIC (287) 14 27 28 29
COMMA (288) 12 16 59
RESERVED (289)
ID (290) 1 6 9 10 12 14 16 28 37 43 44
REDUCEEXPRESSON1 (291)
IFX (292)
OPS_FTW (293)


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Start (40)
    on left: 1, on right: 0
field_or_method_decaration (41)
    on left: 2 3 4, on right: 1 2 3
FieldDecl (42)
    on left: 5, on right: 2
MethodDecl (43)
    on left: 6, on right: 3
method_type_declaration (44)
    on left: 7 8, on right: 6
FormalParams (45)
    on left: 9 10 11, on right: 6
several_FormalParams (46)
    on left: 12 13, on right: 9 12
VarDecl (47)
    on left: 14 15, on right: 5 6 14
several_var_decl_in_same_instructionOPTIONAL (48)
    on left: 16 17, on right: 14 16
Type (49)
    on left: 18, on right: 7 9 12 14
square_brackets_OPTIONAL (50)
    on left: 19 20, on right: 18
statement_declaration_REPETITION (51)
    on left: 21 22, on right: 6 21
Statement (52)
    on left: 23 24 25 26 27 28 29, on right: 21 24 25 26 30
several_statement (53)
    on left: 30 31, on right: 23 30
array_indexOPTIONAL (54)
    on left: 32 33, on right: 28
return_expression (55)
    on left: 34 35, on right: 29
Cenas (56)
    on left: 36 37 38 39 40 41 42 43 44, on right: 45 46
Expr (57)
    on left: 45 46 47, on right: 24 25 26 27 28 32 34 36 40 41 42 43
    46 47 58 59
operations (58)
    on left: 48 49 50 51, on right: 36
int_or_bool (59)
    on left: 52 53, on right: 18 47
not_or_op3 (60)
    on left: 54 55, on right: 40
Args_OPTIONAL (61)
    on left: 56 57, on right: 44
Args (62)
    on left: 58, on right: 56
comma_expr (63)
    on left: 59 60, on right: 58 59


state 0

    0 $accept: . Start $end

    CLASS  shift, and go to state 1

    Start  go to state 2


state 1

    1 Start: CLASS . ID OBRACE field_or_method_decaration CBRACE

    ID  shift, and go to state 3


state 2

    0 $accept: Start . $end

    $end  shift, and go to state 4


state 3

    1 Start: CLASS ID . OBRACE field_or_method_decaration CBRACE

    OBRACE  shift, and go to state 5


state 4

    0 $accept: Start $end .

    $default  accept


state 5

    1 Start: CLASS ID OBRACE . field_or_method_decaration CBRACE

    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7

    $default  reduce using rule 4 (field_or_method_decaration)

    field_or_method_decaration  go to state 8
    FieldDecl                   go to state 9
    MethodDecl                  go to state 10


state 6

    6 MethodDecl: PUBLIC . STATIC method_type_declaration ID OCURV FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE

    STATIC  shift, and go to state 11


state 7

    5 FieldDecl: STATIC . VarDecl

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13

    $default  reduce using rule 15 (VarDecl)

    VarDecl      go to state 14
    Type         go to state 15
    int_or_bool  go to state 16


state 8

    1 Start: CLASS ID OBRACE field_or_method_decaration . CBRACE

    CBRACE  shift, and go to state 17


state 9

    2 field_or_method_decaration: FieldDecl . field_or_method_decaration

    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7

    $default  reduce using rule 4 (field_or_method_decaration)

    field_or_method_decaration  go to state 18
    FieldDecl                   go to state 9
    MethodDecl                  go to state 10


state 10

    3 field_or_method_decaration: MethodDecl . field_or_method_decaration

    PUBLIC  shift, and go to state 6
    STATIC  shift, and go to state 7

    $default  reduce using rule 4 (field_or_method_decaration)

    field_or_method_decaration  go to state 19
    FieldDecl                   go to state 9
    MethodDecl                  go to state 10


state 11

    6 MethodDecl: PUBLIC STATIC . method_type_declaration ID OCURV FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13
    VOID  shift, and go to state 20

    method_type_declaration  go to state 21
    Type                     go to state 22
    int_or_bool              go to state 16


state 12

   52 int_or_bool: INT .

    $default  reduce using rule 52 (int_or_bool)


state 13

   53 int_or_bool: BOOL .

    $default  reduce using rule 53 (int_or_bool)


state 14

    5 FieldDecl: STATIC VarDecl .

    $default  reduce using rule 5 (FieldDecl)


state 15

   14 VarDecl: Type . ID several_var_decl_in_same_instructionOPTIONAL SEMIC VarDecl

    ID  shift, and go to state 23


state 16

   18 Type: int_or_bool . square_brackets_OPTIONAL

    OSQUARE  shift, and go to state 24

    $default  reduce using rule 20 (square_brackets_OPTIONAL)

    square_brackets_OPTIONAL  go to state 25


state 17

    1 Start: CLASS ID OBRACE field_or_method_decaration CBRACE .

    $default  reduce using rule 1 (Start)


state 18

    2 field_or_method_decaration: FieldDecl field_or_method_decaration .

    $default  reduce using rule 2 (field_or_method_decaration)


state 19

    3 field_or_method_decaration: MethodDecl field_or_method_decaration .

    $default  reduce using rule 3 (field_or_method_decaration)


state 20

    8 method_type_declaration: VOID .

    $default  reduce using rule 8 (method_type_declaration)


state 21

    6 MethodDecl: PUBLIC STATIC method_type_declaration . ID OCURV FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE

    ID  shift, and go to state 26


state 22

    7 method_type_declaration: Type .

    $default  reduce using rule 7 (method_type_declaration)


state 23

   14 VarDecl: Type ID . several_var_decl_in_same_instructionOPTIONAL SEMIC VarDecl

    COMMA  shift, and go to state 27

    $default  reduce using rule 17 (several_var_decl_in_same_instructionOPTIONAL)

    several_var_decl_in_same_instructionOPTIONAL  go to state 28


state 24

   19 square_brackets_OPTIONAL: OSQUARE . CSQUARE

    CSQUARE  shift, and go to state 29


state 25

   18 Type: int_or_bool square_brackets_OPTIONAL .

    $default  reduce using rule 18 (Type)


state 26

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID . OCURV FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE

    OCURV  shift, and go to state 30


state 27

   16 several_var_decl_in_same_instructionOPTIONAL: COMMA . ID several_var_decl_in_same_instructionOPTIONAL

    ID  shift, and go to state 31


state 28

   14 VarDecl: Type ID several_var_decl_in_same_instructionOPTIONAL . SEMIC VarDecl

    SEMIC  shift, and go to state 32


state 29

   19 square_brackets_OPTIONAL: OSQUARE CSQUARE .

    $default  reduce using rule 19 (square_brackets_OPTIONAL)


state 30

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV . FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE

    INT     shift, and go to state 12
    BOOL    shift, and go to state 13
    STRING  shift, and go to state 33

    $default  reduce using rule 11 (FormalParams)

    FormalParams  go to state 34
    Type          go to state 35
    int_or_bool   go to state 16


state 31

   16 several_var_decl_in_same_instructionOPTIONAL: COMMA ID . several_var_decl_in_same_instructionOPTIONAL

    COMMA  shift, and go to state 27

    $default  reduce using rule 17 (several_var_decl_in_same_instructionOPTIONAL)

    several_var_decl_in_same_instructionOPTIONAL  go to state 36


state 32

   14 VarDecl: Type ID several_var_decl_in_same_instructionOPTIONAL SEMIC . VarDecl

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13

    $default  reduce using rule 15 (VarDecl)

    VarDecl      go to state 37
    Type         go to state 15
    int_or_bool  go to state 16


state 33

   10 FormalParams: STRING . OSQUARE CSQUARE ID

    OSQUARE  shift, and go to state 38


state 34

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV FormalParams . CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE

    CCURV  shift, and go to state 39


state 35

    9 FormalParams: Type . ID several_FormalParams

    ID  shift, and go to state 40


state 36

   16 several_var_decl_in_same_instructionOPTIONAL: COMMA ID several_var_decl_in_same_instructionOPTIONAL .

    $default  reduce using rule 16 (several_var_decl_in_same_instructionOPTIONAL)


state 37

   14 VarDecl: Type ID several_var_decl_in_same_instructionOPTIONAL SEMIC VarDecl .

    $default  reduce using rule 14 (VarDecl)


state 38

   10 FormalParams: STRING OSQUARE . CSQUARE ID

    CSQUARE  shift, and go to state 41


state 39

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV FormalParams CCURV . OBRACE VarDecl statement_declaration_REPETITION CBRACE

    OBRACE  shift, and go to state 42


state 40

    9 FormalParams: Type ID . several_FormalParams

    COMMA  shift, and go to state 43

    $default  reduce using rule 13 (several_FormalParams)

    several_FormalParams  go to state 44


state 41

   10 FormalParams: STRING OSQUARE CSQUARE . ID

    ID  shift, and go to state 45


state 42

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV FormalParams CCURV OBRACE . VarDecl statement_declaration_REPETITION CBRACE

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13

    $default  reduce using rule 15 (VarDecl)

    VarDecl      go to state 46
    Type         go to state 15
    int_or_bool  go to state 16


state 43

   12 several_FormalParams: COMMA . Type ID several_FormalParams

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13

    Type         go to state 47
    int_or_bool  go to state 16


state 44

    9 FormalParams: Type ID several_FormalParams .

    $default  reduce using rule 9 (FormalParams)


state 45

   10 FormalParams: STRING OSQUARE CSQUARE ID .

    $default  reduce using rule 10 (FormalParams)


state 46

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV FormalParams CCURV OBRACE VarDecl . statement_declaration_REPETITION CBRACE

    IF      shift, and go to state 48
    WHILE   shift, and go to state 49
    PRINT   shift, and go to state 50
    RETURN  shift, and go to state 51
    OBRACE  shift, and go to state 52
    ID      shift, and go to state 53

    $default  reduce using rule 22 (statement_declaration_REPETITION)

    statement_declaration_REPETITION  go to state 54
    Statement                         go to state 55


state 47

   12 several_FormalParams: COMMA Type . ID several_FormalParams

    ID  shift, and go to state 56


state 48

   24 Statement: IF . OCURV Expr CCURV Statement
   25          | IF . OCURV Expr CCURV Statement ELSE Statement

    OCURV  shift, and go to state 57


state 49

   26 Statement: WHILE . OCURV Expr CCURV Statement

    OCURV  shift, and go to state 58


state 50

   27 Statement: PRINT . OCURV Expr CCURV SEMIC

    OCURV  shift, and go to state 59


state 51

   29 Statement: RETURN . return_expression SEMIC

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    $default  reduce using rule 35 (return_expression)

    return_expression  go to state 68
    Cenas              go to state 69
    Expr               go to state 70
    not_or_op3         go to state 71


state 52

   23 Statement: OBRACE . several_statement CBRACE

    IF      shift, and go to state 48
    WHILE   shift, and go to state 49
    PRINT   shift, and go to state 50
    RETURN  shift, and go to state 51
    OBRACE  shift, and go to state 52
    ID      shift, and go to state 53

    $default  reduce using rule 31 (several_statement)

    Statement          go to state 72
    several_statement  go to state 73


state 53

   28 Statement: ID . array_indexOPTIONAL ASSIGN Expr SEMIC

    OSQUARE  shift, and go to state 74

    $default  reduce using rule 33 (array_indexOPTIONAL)

    array_indexOPTIONAL  go to state 75


state 54

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION . CBRACE

    CBRACE  shift, and go to state 76


state 55

   21 statement_declaration_REPETITION: Statement . statement_declaration_REPETITION

    IF      shift, and go to state 48
    WHILE   shift, and go to state 49
    PRINT   shift, and go to state 50
    RETURN  shift, and go to state 51
    OBRACE  shift, and go to state 52
    ID      shift, and go to state 53

    $default  reduce using rule 22 (statement_declaration_REPETITION)

    statement_declaration_REPETITION  go to state 77
    Statement                         go to state 55


state 56

   12 several_FormalParams: COMMA Type ID . several_FormalParams

    COMMA  shift, and go to state 43

    $default  reduce using rule 13 (several_FormalParams)

    several_FormalParams  go to state 78


state 57

   24 Statement: IF OCURV . Expr CCURV Statement
   25          | IF OCURV . Expr CCURV Statement ELSE Statement

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 79
    not_or_op3  go to state 71


state 58

   26 Statement: WHILE OCURV . Expr CCURV Statement

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 80
    not_or_op3  go to state 71


state 59

   27 Statement: PRINT OCURV . Expr CCURV SEMIC

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 81
    not_or_op3  go to state 71


state 60

   38 Cenas: INTLIT .

    $default  reduce using rule 38 (Cenas)


state 61

   39 Cenas: BOOLLIT .

    $default  reduce using rule 39 (Cenas)


state 62

   47 Expr: NEW . int_or_bool OSQUARE Expr CSQUARE

    INT   shift, and go to state 12
    BOOL  shift, and go to state 13

    int_or_bool  go to state 82


state 63

   43 Cenas: PARSEINT . OCURV ID OSQUARE Expr CSQUARE CCURV

    OCURV  shift, and go to state 83


state 64

   41 Cenas: OCURV . Expr CCURV

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 84
    not_or_op3  go to state 71


state 65

   54 not_or_op3: OP3 .

    $default  reduce using rule 54 (not_or_op3)


state 66

   55 not_or_op3: NOT .

    $default  reduce using rule 55 (not_or_op3)


state 67

   37 Cenas: ID .
   44      | ID . OCURV Args_OPTIONAL CCURV

    OCURV  shift, and go to state 85

    $default  reduce using rule 37 (Cenas)


state 68

   29 Statement: RETURN return_expression . SEMIC

    SEMIC  shift, and go to state 86


state 69

   45 Expr: Cenas .
   46     | Cenas . OSQUARE Expr CSQUARE

    OSQUARE  shift, and go to state 87

    $default  reduce using rule 45 (Expr)


state 70

   34 return_expression: Expr .
   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH

    DOTLENGTH  shift, and go to state 88
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    $default  reduce using rule 34 (return_expression)

    operations  go to state 93


state 71

   40 Cenas: not_or_op3 . Expr

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 94
    not_or_op3  go to state 71


state 72

   30 several_statement: Statement . several_statement

    IF      shift, and go to state 48
    WHILE   shift, and go to state 49
    PRINT   shift, and go to state 50
    RETURN  shift, and go to state 51
    OBRACE  shift, and go to state 52
    ID      shift, and go to state 53

    $default  reduce using rule 31 (several_statement)

    Statement          go to state 72
    several_statement  go to state 95


state 73

   23 Statement: OBRACE several_statement . CBRACE

    CBRACE  shift, and go to state 96


state 74

   32 array_indexOPTIONAL: OSQUARE . Expr CSQUARE

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 97
    not_or_op3  go to state 71


state 75

   28 Statement: ID array_indexOPTIONAL . ASSIGN Expr SEMIC

    ASSIGN  shift, and go to state 98


state 76

    6 MethodDecl: PUBLIC STATIC method_type_declaration ID OCURV FormalParams CCURV OBRACE VarDecl statement_declaration_REPETITION CBRACE .

    $default  reduce using rule 6 (MethodDecl)


state 77

   21 statement_declaration_REPETITION: Statement statement_declaration_REPETITION .

    $default  reduce using rule 21 (statement_declaration_REPETITION)


state 78

   12 several_FormalParams: COMMA Type ID several_FormalParams .

    $default  reduce using rule 12 (several_FormalParams)


state 79

   24 Statement: IF OCURV Expr . CCURV Statement
   25          | IF OCURV Expr . CCURV Statement ELSE Statement
   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH

    DOTLENGTH  shift, and go to state 88
    CCURV      shift, and go to state 99
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 80

   26 Statement: WHILE OCURV Expr . CCURV Statement
   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH

    DOTLENGTH  shift, and go to state 88
    CCURV      shift, and go to state 100
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 81

   27 Statement: PRINT OCURV Expr . CCURV SEMIC
   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH

    DOTLENGTH  shift, and go to state 88
    CCURV      shift, and go to state 101
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 82

   47 Expr: NEW int_or_bool . OSQUARE Expr CSQUARE

    OSQUARE  shift, and go to state 102


state 83

   43 Cenas: PARSEINT OCURV . ID OSQUARE Expr CSQUARE CCURV

    ID  shift, and go to state 103


state 84

   36 Cenas: Expr . operations Expr
   41      | OCURV Expr . CCURV
   42      | Expr . DOTLENGTH

    DOTLENGTH  shift, and go to state 88
    CCURV      shift, and go to state 104
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 85

   44 Cenas: ID OCURV . Args_OPTIONAL CCURV

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    $default  reduce using rule 57 (Args_OPTIONAL)

    Cenas          go to state 69
    Expr           go to state 105
    not_or_op3     go to state 71
    Args_OPTIONAL  go to state 106
    Args           go to state 107


state 86

   29 Statement: RETURN return_expression SEMIC .

    $default  reduce using rule 29 (Statement)


state 87

   46 Expr: Cenas OSQUARE . Expr CSQUARE

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 108
    not_or_op3  go to state 71


state 88

   42 Cenas: Expr DOTLENGTH .

    $default  reduce using rule 42 (Cenas)


state 89

   48 operations: OP1 .

    $default  reduce using rule 48 (operations)


state 90

   49 operations: OP2 .

    $default  reduce using rule 49 (operations)


state 91

   50 operations: OP3 .

    $default  reduce using rule 50 (operations)


state 92

   51 operations: OP4 .

    $default  reduce using rule 51 (operations)


state 93

   36 Cenas: Expr operations . Expr

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 109
    not_or_op3  go to state 71


state 94

   36 Cenas: Expr . operations Expr
   40      | not_or_op3 Expr .
   42      | Expr . DOTLENGTH

    $default  reduce using rule 40 (Cenas)

    operations  go to state 93


state 95

   30 several_statement: Statement several_statement .

    $default  reduce using rule 30 (several_statement)


state 96

   23 Statement: OBRACE several_statement CBRACE .

    $default  reduce using rule 23 (Statement)


state 97

   32 array_indexOPTIONAL: OSQUARE Expr . CSQUARE
   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH

    DOTLENGTH  shift, and go to state 88
    CSQUARE    shift, and go to state 110
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 98

   28 Statement: ID array_indexOPTIONAL ASSIGN . Expr SEMIC

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 111
    not_or_op3  go to state 71


state 99

   24 Statement: IF OCURV Expr CCURV . Statement
   25          | IF OCURV Expr CCURV . Statement ELSE Statement

    IF      shift, and go to state 48
    WHILE   shift, and go to state 49
    PRINT   shift, and go to state 50
    RETURN  shift, and go to state 51
    OBRACE  shift, and go to state 52
    ID      shift, and go to state 53

    Statement  go to state 112


state 100

   26 Statement: WHILE OCURV Expr CCURV . Statement

    IF      shift, and go to state 48
    WHILE   shift, and go to state 49
    PRINT   shift, and go to state 50
    RETURN  shift, and go to state 51
    OBRACE  shift, and go to state 52
    ID      shift, and go to state 53

    Statement  go to state 113


state 101

   27 Statement: PRINT OCURV Expr CCURV . SEMIC

    SEMIC  shift, and go to state 114


state 102

   47 Expr: NEW int_or_bool OSQUARE . Expr CSQUARE

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 115
    not_or_op3  go to state 71


state 103

   43 Cenas: PARSEINT OCURV ID . OSQUARE Expr CSQUARE CCURV

    OSQUARE  shift, and go to state 116


state 104

   41 Cenas: OCURV Expr CCURV .

    $default  reduce using rule 41 (Cenas)


state 105

   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH
   58 Args: Expr . comma_expr

    DOTLENGTH  shift, and go to state 88
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92
    COMMA      shift, and go to state 117

    $default  reduce using rule 60 (comma_expr)

    operations  go to state 93
    comma_expr  go to state 118


state 106

   44 Cenas: ID OCURV Args_OPTIONAL . CCURV

    CCURV  shift, and go to state 119


state 107

   56 Args_OPTIONAL: Args .

    $default  reduce using rule 56 (Args_OPTIONAL)


state 108

   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH
   46 Expr: Cenas OSQUARE Expr . CSQUARE

    DOTLENGTH  shift, and go to state 88
    CSQUARE    shift, and go to state 120
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 109

   36 Cenas: Expr . operations Expr
   36      | Expr operations Expr .
   42      | Expr . DOTLENGTH

    $default  reduce using rule 36 (Cenas)

    operations  go to state 93


state 110

   32 array_indexOPTIONAL: OSQUARE Expr CSQUARE .

    $default  reduce using rule 32 (array_indexOPTIONAL)


state 111

   28 Statement: ID array_indexOPTIONAL ASSIGN Expr . SEMIC
   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH

    DOTLENGTH  shift, and go to state 88
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92
    SEMIC      shift, and go to state 121

    operations  go to state 93


state 112

   24 Statement: IF OCURV Expr CCURV Statement .
   25          | IF OCURV Expr CCURV Statement . ELSE Statement

    ELSE  shift, and go to state 122

    $default  reduce using rule 24 (Statement)


state 113

   26 Statement: WHILE OCURV Expr CCURV Statement .

    $default  reduce using rule 26 (Statement)


state 114

   27 Statement: PRINT OCURV Expr CCURV SEMIC .

    $default  reduce using rule 27 (Statement)


state 115

   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH
   47 Expr: NEW int_or_bool OSQUARE Expr . CSQUARE

    DOTLENGTH  shift, and go to state 88
    CSQUARE    shift, and go to state 123
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 116

   43 Cenas: PARSEINT OCURV ID OSQUARE . Expr CSQUARE CCURV

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 124
    not_or_op3  go to state 71


state 117

   59 comma_expr: COMMA . Expr comma_expr

    INTLIT    shift, and go to state 60
    BOOLLIT   shift, and go to state 61
    NEW       shift, and go to state 62
    PARSEINT  shift, and go to state 63
    OCURV     shift, and go to state 64
    OP3       shift, and go to state 65
    NOT       shift, and go to state 66
    ID        shift, and go to state 67

    Cenas       go to state 69
    Expr        go to state 125
    not_or_op3  go to state 71


state 118

   58 Args: Expr comma_expr .

    $default  reduce using rule 58 (Args)


state 119

   44 Cenas: ID OCURV Args_OPTIONAL CCURV .

    $default  reduce using rule 44 (Cenas)


state 120

   46 Expr: Cenas OSQUARE Expr CSQUARE .

    $default  reduce using rule 46 (Expr)


state 121

   28 Statement: ID array_indexOPTIONAL ASSIGN Expr SEMIC .

    $default  reduce using rule 28 (Statement)


state 122

   25 Statement: IF OCURV Expr CCURV Statement ELSE . Statement

    IF      shift, and go to state 48
    WHILE   shift, and go to state 49
    PRINT   shift, and go to state 50
    RETURN  shift, and go to state 51
    OBRACE  shift, and go to state 52
    ID      shift, and go to state 53

    Statement  go to state 126


state 123

   47 Expr: NEW int_or_bool OSQUARE Expr CSQUARE .

    $default  reduce using rule 47 (Expr)


state 124

   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH
   43      | PARSEINT OCURV ID OSQUARE Expr . CSQUARE CCURV

    DOTLENGTH  shift, and go to state 88
    CSQUARE    shift, and go to state 127
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92

    operations  go to state 93


state 125

   36 Cenas: Expr . operations Expr
   42      | Expr . DOTLENGTH
   59 comma_expr: COMMA Expr . comma_expr

    DOTLENGTH  shift, and go to state 88
    OP1        shift, and go to state 89
    OP2        shift, and go to state 90
    OP3        shift, and go to state 91
    OP4        shift, and go to state 92
    COMMA      shift, and go to state 117

    $default  reduce using rule 60 (comma_expr)

    operations  go to state 93
    comma_expr  go to state 128


state 126

   25 Statement: IF OCURV Expr CCURV Statement ELSE Statement .

    $default  reduce using rule 25 (Statement)


state 127

   43 Cenas: PARSEINT OCURV ID OSQUARE Expr CSQUARE . CCURV

    CCURV  shift, and go to state 129


state 128

   59 comma_expr: COMMA Expr comma_expr .

    $default  reduce using rule 59 (comma_expr)


state 129

   43 Cenas: PARSEINT OCURV ID OSQUARE Expr CSQUARE CCURV .

    $default  reduce using rule 43 (Cenas)
